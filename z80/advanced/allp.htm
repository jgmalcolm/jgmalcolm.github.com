---
title: All The Ports
section: Advanced
layout: z80
---

<UL>
	<LI><A HREF="#p0">Port 0 - Screen Offset</A>
	<LI><A HREF="#p1">Port 1 - Key Port</A>
	<LI><A HREF="#p2">Port 2 - Contrast</A>
	<LI><A HREF="#p3">Port 3 - [ON] and Interrupts</A>
	<LI><A HREF="#p4">Port 4 - Power Mode</A>
	<LI><A HREF="#p5">Port 5 - ROM Pages</A>
	<LI><A HREF="#p6">Port 6 - RAM Pages</A>
	<LI><A HREF="#p7">Port 7 - Link Port</A>
</UL>

<A NAME=p0></a><H2>Port 0 - Screen Offset</H2>
Port 0 is used for the screen offset. You can only write
to this port. You can send any value between $00 and $3c. These
equations show the relationship between what is
sent and the resulting address. <code>Address</code>
is the address of the Video Memory and <code>send</code> is the byte sent
out port 0.

<PRE>address = $100 * ( send + $c0 )

send = <u> address - $c000 </u>
	     $100</PRE>
<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p1"></a><h2>Port 1 - Key Port</h2>
Port 1 is used for the keypresses. If you don't remember us
talking about that, look back at the <A HREF="read.htm">keypress
section</A>. I went into some pretty good detail about it.
<p><P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p2"></a><h2>Port 2 - Contrast</h2>
Port 2 is used to adjust the contrast.  It is another write-only
port.  You can send any value between 0 and 31 to specify different contrast
levels.  Since it's a read-only port, there has to be some way of recording
what we do to it.  We have to save what we do with that port into <code>_contrast</code>
($c008).  We have to check what that value is, see if it's maxed out or
at the minimum.  Then we send the new contrast through port 2 and save
what we did to <code>_contrast</code>.  The program
<A HREF="../download/contrast.asm">Contrast.asm</A>
is an example of changing the contrast with the Up and Down keys.
Here's another routine that increases the contrast if possible.
<PRE>_contrast	=$c008		;where contrast is stored
contrast_port	=2		;port controlling contrast

increase_contrast:
	ld hl,_contrast		;address of contrast
	ld a,(hl)		;get contrast
	cp 31			;compare it to max
	ret z			;it was 31 so return
	inc a			;increase contrast
	ld (hl),a		;put back changes
	out (contrast_port),a	;update contrast
	ret</PRE>
<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p3"></a><h2>Port 3 - [ON] and Interrupts</h2>
Port 3 is used with the [ON] button and the LCD power.  This is
a read and write port.  Here's a chart to tell you what the bits mean when
they're either set or reset:
<table align="center" class="info">
	<TR class="header">
		<TD>&nbsp;</td>
		<TD>Set</td>
		<TD>Reset</td>
	</tr>
	<TR>
		<TD class="header">Read:</td>
		<TD>Bit 3 - [ON] key was not pressed<BR>
		Bit 2 - Timer interrupt happened<BR>
		Bit 1 - LCD is on<BR>
		Bit 0 - [ON] interrupt happened</td>
		<TD>Bit 3 - [ON] was pressed<BR>
		Bit 2 - Timer interrupt hasn't happened<BR>
		Bit 1 - LCD is off<BR>
		Bit 0 - [ON] interrupt hasn't happened</td>
	</tr>
	<TR>
		<TD class="header">Write:</td>
		<TD>Bit 3 - Turn LCD off<BR>
		Bit 2 - Don't mask timer interrupts (200Hz)<BR>
		Bit 1 - LCD status on*<BR>
		Bit 0 - Don't mask [ON] key interrupts*</td>
		<TD>Bit 3 - Turn LCD on<BR>
		Bit 2 - Mask timer interrupts (200Hz)<BR>
		Bit 1 - LCD status off<BR>
		Bit 0 - Mask [ON] key interrupts</td>
	</tr>
</TABLE>
<p align="right"><FONT SIZE=1>* Don't exit to TI-OS with bits 0 or 1 reset or
the calculator will freeze.</FONT>

<p>The <A HREF="../download/presson.asm">PressOn.asm</A>
program shows how to check for [ON] being pressed like this.
More on this in the <A HREF="onof.htm">On-Off Section</A>.
<PRE>
	in a,(on_port)		;get status
	bit 3,a			;on's bit..reset if down
	call z,pressing		;[on] is being held
				; down now so call
				; 'pressing' routine</PRE>
<p>You can turn off the screen manually too.  Note that
this doesn't turn off the calculator, it merely quits
refreshing the Video Memory to the screen.  The TI86 will
still be running in normal power mode, as opposed to
low power mode when TI-OS turns if off.  Details
in the <A HREF="onof.htm">On-Off Section</A>. Since
the processor is executing this code fast, it will
be turning on and off probably 50 times while you're
pushing the [ON] button down and releasing it.  You
can try to slow down the processor some by having it
check other stuff in the mean time or just doing other
tasks instead of continually checking for the [ON] key
being pressed.

<PRE>turn_off:
	ld a,%00000001
	out (3),a		;turn off lcd
	halt			;wait for [on]
	ld a,%00000010
	out (3),a		;turn on lcd
        res onInterrupt,(iy+onFlags)
				;turn off the flag so
				;ti-os doesn't detect it too
	ret</PRE>
<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p4"></a><h2>Port 4 - Power Mode</h2>
Port 4 is used for the the Power Mode mainly. It's either
in Normal Power Mode or Low Power Mode. This is all done
with bit 0. TI-OS puts the calculator in Low Power Mode
before shutting down to save battery life. If bit 0
is reset, it's in Low Power Mode; set is High Power Mode.
Here's how to check if it's in low power mode.
<PRE>mode_port	=4		;port to check
power_mode:
	in a,(mode_port)	;get status
	bit 0,a			;check mode
	jr z,in_low_power_mode	;is in low power mode
	ret</PRE>

<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p5"></a><h2>Port 5 - ROM Pages</h2>
See <A HREF="../intermediate/memo.htm">Memory
and R_M Pages</A>.

<p><P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p6"></a><h2>Port 6 - RAM Pages</h2>
See <A HREF="../intermediate/memo.htm">Memory
and R_M Pages</A>.

<p><P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<a name="p7"></a><h2>Port 7 - Link Port</h2>
Port 7 is used for the link port.  It can be used for
<A HREF="soun.htm">sound</A>, memory expanders, or
<A HREF="../variables/send.htm">sending/receiving information</A>.
I haven't researched this area much. Check back sometime
because I've ordered a second TI86 to work with.

<p>I can direct you to Randy Gluvna's
<A HREF="../download/linkrout.h">LinkRout.h</A> or
<A HREF="http://www.acz.org" target="_blank">ACZ's</A>
copy <A HREF="../download/link86.asm">Link86.asm</A>.
With this routine, you will be able to send and
receive single bytes.  I'm sorry for the inconvenience
this may have caused.</p>
