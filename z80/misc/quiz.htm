<HTML>
<HEAD>
<TITLE>The Guide</TITLE>
<LINK REL=StyleSheet TYPE="text/css" HREF="../guide.css">
<SCRIPT LANGUAGE=JavaScript SRC="../guide.js"></SCRIPT>
<style type="text/css">
.clsCorrect	{ color: red }
</style>
</HEAD>
<body onLoad="ClearRadios()">
<script language=JavaScript>
function ClearRadios()	{ Clear() }
function Clear()
	{
	divCorrect1.style.display = 'none';
	divCorrect2.style.display = 'none';
	divCorrect3.style.display = 'none';
	divCorrect4.style.display = 'none';
	divCorrect5.style.display = 'none';
	divCorrect6.style.display = 'none';
	divCorrect7.style.display = 'none';
	divCorrect8.style.display = 'none';
	divCorrect9.style.display = 'none';
	divCorrect10.style.display = 'none';

	//gives it a default value of what it was before
	spanCorrect1.style.color = '';
	spanCorrect2.style.color = '';
	spanCorrect3.style.color = '';
	spanCorrect4.style.color = '';
	spanCorrect5.style.color = '';
	spanCorrect6.style.color = '';
	spanCorrect7.style.color = '';
	spanCorrect8.style.color = '';
	spanCorrect9.style.color = '';
	spanCorrect10.style.color = '';
	}
// set different values for the questions for difficulty. the resultant total will
// determine the level suggested.
function Check()
	{
	if (frmQuestions.inQuestion1.value != "1")
		{
		divCorrect1.style.display = 'inline';
		spanCorrect1.style.color = 'red';
		}

	if (frmQuestions.inQuestion2.value != "1")
		{
		divCorrect2.style.display = 'inline';
		spanCorrect2.style.color = 'red';
		}

	if (frmQuestions.inQuestion3.value != "1")
		{
		divCorrect3.style.display = 'inline';
		spanCorrect3.style.color = 'red';
		}

	if (frmQuestions.inQuestion4.value != "1")
		{
		divCorrect4.style.display = 'inline';
		spanCorrect4.style.color = 'red';
		}

	if (frmQuestions.inQuestion5.value != "1")
		{
		divCorrect5.style.display = 'inline';
		spanCorrect5.style.color = 'red';
		}

	if (frmQuestions.inQuestion6.value != "1")
		{
		divCorrect6.style.display = 'inline';
		spanCorrect6.style.color = 'red';
		}

	if (frmQuestions.inQuestion7.value != "1")
		{
		divCorrect7.style.display = 'inline';
		spanCorrect7.style.color = 'red';
		}

	if (frmQuestions.inQuestion8.value != "1")
		{
		divCorrect8.style.display = 'inline';
		spanCorrect8.style.color = 'red';
		}

	if (frmQuestions.inQuestion9.value != "1")
		{
		divCorrect9.style.display = 'inline';
		spanCorrect9.style.color = 'red';
		}

	if (frmQuestions.inQuestion10.value != "1")
		{
		divCorrect10.style.display = 'inline';
		spanCorrect10.style.color = 'red';
		}

	}
</SCRIPT>

<form NAME=frmQuestions>
<OL>
<LI>What does <CODE>dec a</CODE> do?<BR>
<input type=radio NAME=inRadio1 onClick="inQuestion1.value='1'"><span id=spanCorrect1>Decreases the accumulator</span><BR>
<input type=radio NAME=inRadio1 onClick="inQuestion1.value='0'">Copies <CODE>a</CODE> to <CODE>c</CODE><BR>
<input type=radio NAME=inRadio1 onClick="inQuestion1.value='0'">Stores the <CODE>a</CODE> register.<BR>
<div id=divCorrect1><CODE>Dec a</CODE> stands for DECrement the Accumulator,
which is the <CODE>a</CODE> register.</div>

<P><LI>What does <CODE>call _clrLCD</CODE> do?<BR>
<input type=radio NAME=inRadio2 onClick="inQuestion2.value='0'">Defines an alias<BR>
<input type=radio NAME=inRadio2 onClick="inQuestion2.value='1'"><span id=spanCorrect2>Clears the screen</span><BR>
<input type=radio NAME=inRadio2 onClick="inQuestion2.value='0'">Runs the program <CODE>call</CODE><BR>
<div id=divCorrect2><CODE>_clrLCD</CODE> is a subroutine that clears the Liquid Crystal
Display of the calculator.</div>

<P><LI>%00001111 is equal to what?<BR>
<input type=radio NAME=inRadio3 onClick="inQuestion3.value='1'"><span id=spanCorrect3>15</span><BR>
<input type=radio NAME=inRadio3 onClick="inQuestion3.value='0'">24<BR>
<input type=radio NAME=inRadio3 onClick="inQuestion3.value='0'">4<BR>
<div id=divCorrect3>This is binary for 15.</div>

<P><LI>What must come to the left of each instruction in your code?<BR>
<input type=radio NAME=inRadio4 onClick="inQuestion4.value='0'">The letter <CODE>A</CODE><BR>
<input type=radio NAME=inRadio4 onClick="inQuestion4.value='0'">A <CODE>call</CODE><BR>
<input type=radio NAME=inRadio4 onClick="inQuestion4.value='1'"><span id=spanCorrect4>White Space</span><BR>
<div id=divCorrect4>Most assemblers need to see
a space or a Tab in the left margin in order to recognize the line as having
an instruction. Otherwise, the assembler thinks it's an Assembler Directive
or a label.</div>

<P><LI>What is the Two's Compliment also known as?<BR>
<input type=radio NAME=inRadio5 onClick="inQuestion5.value='0'">Address Referencing<BR>
<input type=radio NAME=inRadio5 onClick="inQuestion5.value='1'"><span id=spanCorrect5>Negative Numbers</span><BR>
<input type=radio NAME=inRadio5 onClick="inQuestion5.value='0'">An Instruction<BR>
<div id=divCorrect5>Two's Compliment is just another term for
representing Negative Numbers to the calculator.</div>

<P><LI><CODE>Or <I>arg1</I></CODE> sets bits in <CODE>a</CODE> (the accumulator) if they are...<BR>
<input type=radio NAME=inRadio6 onClick="inQuestion6.value='1'"><span id=spanCorrect6>Set in either <CODE>a</CODE> or <I>arg1</I>.</span><BR>
<input type=radio NAME=inRadio6 onClick="inQuestion6.value='0'">Set in <CODE>a</CODE> or <I>arg1</I> but not both.<BR>
<input type=radio NAME=inRadio6 onClick="inQuestion6.value='0'">Set in both <CODE>a</CODE> and <I>arg1</I>, not in just one of the two.<BR>
<div id=divCorrect6>The Logical Operator <CODE>or</CODE> will set
the bits if they are set at all in either <CODE>a</CODE> or <I>arg1</I>.</div>

<P><LI><CODE>_VPuts</CODE> is used when?<BR>
<input type=radio NAME=inRadio7 onClick="inQuestion7.value='0'">Checking for a key being pressed.<BR>
<input type=radio NAME=inRadio7 onClick="inQuestion7.value='0'">Plotting a pixel on the screen.<BR>
<input type=radio NAME=inRadio7 onClick="inQuestion7.value='1'"><span id=spanCorrect7>Printing text to the screen.</span><BR>
<div id=divCorrect7><CODE>_VPuts</CODE> prints menu size (variable width)
text on the screen.</div>

<P><LI>If you wanted to rotate the accumulator to the left you would perform the following.<BR>
<input type=radio NAME=inRadio8 onClick="inQuestion8.value='1'"><span id=spanCorrect8><CODE>rlca</CODE></span><BR>
<input type=radio NAME=inRadio8 onClick="inQuestion8.value='0'"><CODE>rra</CODE><BR>
<input type=radio NAME=inRadio8 onClick="inQuestion8.value='0'"><CODE>rlc h</CODE><BR>
<div id=divCorrect8><CODE>Rlca</CODE> rotates the accumulator
to the left with bit 7 moved to the Carry Flag's bit position and also stored in
bit 0 of the accumulator.</div>

<P><LI>What is a Sprite?<BR>
<input type=radio NAME=inRadio9 onClick="inQuestion9.value='0'">A break command used in debugging<BR>
<input type=radio NAME=inRadio9 onClick="inQuestion9.value='0'">A one-byte call<BR>
<input type=radio NAME=inRadio9 onClick="inQuestion9.value='1'"><span id=spanCorrect9>A small image</span><BR>
<div id=divCorrect9>Sprites are bit images
that are drawn on the screen frequently.</div>

<P><LI>What does <CODE>pop bc</CODE> do?<BR>
<input type=radio NAME=inRadio10 onClick="inQuestion10.value='0'">Zeroes <CODE>bc</CODE><BR>
<input type=radio NAME=inRadio10 onClick="inQuestion10.value='1'"><span id=spanCorrect10>Retrieves <CODE>bc</CODE> from the Stack</span><BR>
<input type=radio NAME=inRadio10 onClick="inQuestion10.value='0'">Copies <CODE>b</CODE> into the <CODE>c</CODE> register<BR>
<div id=divCorrect10>The instruction <CODE>pop</CODE> is used in conjunction with
<CODE>push</CODE> to store and retrieve register pairs with the help of the Stack.</div>

<P><input type=button class=button value="Submit" onClick="Check()">
<input type=reset class=button value="Reset" onClick="Clear()">
<input type=hidden NAME=inQuestion1>
<input type=hidden NAME=inQuestion2>
<input type=hidden NAME=inQuestion3>
<input type=hidden NAME=inQuestion4>
<input type=hidden NAME=inQuestion5>
<input type=hidden NAME=inQuestion6>
<input type=hidden NAME=inQuestion7>
<input type=hidden NAME=inQuestion8>
<input type=hidden NAME=inQuestion9>
<input type=hidden NAME=inQuestion10>
</form>

<P><A HREF="JavaScript:window.close()">Close Window</A>