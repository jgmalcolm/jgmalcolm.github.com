<HTML>
<HEAD>
<TITLE>The Guide</TITLE>
<LINK REL=StyleSheet TYPE="text/css" HREF="../guide.css">
<SCRIPT LANGUAGE=JavaScript SRC="../guide.js"></SCRIPT>
</HEAD>
<BODY>
<SCRIPT LANGUAGE=JavaScript>top("Other","Download");</SCRIPT>
<UL>
	<LI><A HREF=#prog>Programs</A>
	<LI><A HREF=#docu>Documents</A>
	<LI><A HREF=#temp>Templates</A>
</UL>

<A NAME=prog>
<TABLE WIDTH=70% ALIGN=CENTER CLASS=info>
	<TR CLASS=header>
		<TD COLSPAN=6>Programs, Routines, and Include Files
	<TR CLASS=header>
		<TD WIDTH=10%>Name
		<TD>Description
		<TD>Download
		<TD WIDTH=10%>Author
	<TR>	<TD>Link86
		<TD><A HREF="www.acz.com">ACZ</A>'s own link routine. A hack of <A HREF="linkrout.h">linkrout.h</A>.
		<TD><A HREF="link86.asm"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="www.acz.com">Assembly Coders Zenith</A>
	<TR>	<TD>MemSee
		<TD>The ultimate hexadecimal memory viewer! MemSee let's you swap both
		ROM and RAM pages, a feature lacking in almost all hexviewers. Jump
		to addresses in memory using the Function keys or type in an address to
		go to. After exiting MemSee, it retains the address you left off at, the
		RAM page that was swapped in, and the ROM page that was swapped in. A <B>must</B>
		for all programmers!
		<TD><A HREF="memsee.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="memsee.86p"><IMG SRC="../images/prgm.gif"></A>
		<A HREF="memsee.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>Write Back
		<TD>Routine to copy data like highscores back into the actual
		program's data.
		<TD><A HREF="writeback.asm"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:ComAsYuAre@aol.com">Jonah Cohen</A>
	<TR>	<TD>CrtStrng
		<TD>Fast generic String Variable Type creation program.
		<TD><A HREF="crtstrng.asm"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:a_finne@iobox.fi">Andreas Finne</A>
	<TR>	<TD>Include
		<TD>Set of incorporated include files
		<TD><A HREF="Include.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:darkclem@wanadoo.fr">Clement Vasseur</A>
	<TR>	<TD>Includes
		<TD>All basic include files. A must for every programmer. This contians
		the include files from Pat Milheron from TI.
		<TD><A HREF="includes.zip"><IMG SRC="../images/zip.gif"></A>
		<TD>Compilation
	<TR>	<TD>TI86 Monitor
		<TD>Command line driven system monitor. A must for anyone
		working with the TI86's memory.<BR>
		<A HREF="javascript:popup('ti86mon.txt')">Documentation</A>
		<TD><A HREF="ti86mon.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="ti86mon.86p"><IMG SRC="../images/prgm.gif"></A>
		<TD><A HREF="mailto:sgordon@mich.com">Steve Gordon</A>
	<TR>	<TD>Assembly Studio 86 version 3.1
		<TD>By far the best development environment for the TI86. It contians
		the setup program. A <i>must</i> for all programmers.
		<TD><A HREF="http://asmstudio.acz.org/" target="_blank">
		<IMG SRC="../images/html.gif"></A>
		<TD><A HREF="mailto:jeremy@acz.org">Jeremy Goetsch</A>
	<TR>	<TD>Hex Viewer
		<TD>View hexadecimal and ASCII representations of programs on the TI86.
		<TD><A HREF="hexview.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="hexview.86p"><IMG SRC="../images/prgm.gif"></A>
		<TD><A HREF="mailto:saywhat97@hotmail.com">John Kempen</A>
	<TR>	<TD>destroy
		<TD>Find out what registers are modified during calls.
		<TD><A HREF="destroy.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="destroy.86p"><IMG SRC="../images/prgm.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>flagtest
		<TD>Find out what certain code does to every z80 flag.
		<TD><A HREF="flagtest.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="flagtest.86p"><IMG SRC="../images/prgm.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>AtoF
		<TD>Converts a string of numeric charicters into
		a Floating Point Binary Coded Decimal number.
		<TD><A HREF="atof.asm"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:rabidcow@juno.com">Joshua J Seagoe</A>
	<TR>	<TD>Demo 86
		<TD>Texas Instruments' own demo program to show off
		the functionality of the TI86.
		<TD><A HREF="demo86.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:ti-cares@ti.com">Texas Instruments</A>
	<TR>	<TD>FindPixel
		<TD>Find the address and bit offset in the Video Memory
		from a given pair of coordinates.
		<TD><A HREF="FindPixel.asm"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:darkclem@wanadoo.fr">Clem Vasseur</A>
	<TR>	<TD>Find Pixel Routines
		<TD>A collection of Find Pixel routines all zipped up.
		<TD><A HREF="findpixel.zip"><IMG SRC="../images/zip.gif"></A>
		<TD>Compilation
	<TR>	<TD>Grayscale Routines
		<TD>A collection of grayscale routines all zipped up.
		<TD><A HREF="grayscale.zip"><IMG SRC="../images/zip.gif"></A>
		<TD>Compilation
	<TR>	<TD>Blitz Gray
		<TD>A fast grayscale routine with almost no flicker.
		<TD><A HREF="blitzgry.h"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:assets@eden.rutgers.edu">Dux Gregis</A>
	<TR>	<TD>Key Test
		<TD>Hit a key and it'll print the keycode in hexadecimal
		for you.
		<TD><A HREF="keytest.asm"><IMG SRC="../images/source.gif"></A>
		<A HREF="keytest.86p"><IMG SRC="../images/prgm.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>Link Routines
		<TD>One of the oldest link transfer routines out there.
		<TD><A HREF="linkrout.h"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:bouron@ens-cachan.fr">Pascal Bouron
	<TR>	<TD>Rascall
		<TD>One of the most graphical Shells available.
		<TD><A HREF="rascall.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:m@shepcar.force9.co.uk">Matthew
		Shepcar</A>
	<TR>	<TD>Addiction
		<TD>Check out this game in the works. It's the newest Drug Wars
		type game to hit the scene. Many names are those of classmates.
		<TD><A HREF="addict.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>Telemark Assembler
		<TD>Commonly known as TASM this is one of the fundamental
		tools for assembling z80 code. Included in all versions of
		Assembly Studio.
		<TD><A HREF="TASM.zip"><IMG SRC="../images/zip.gif"></A>
		<TD><A HREF="mailto:Thomas_N_Anderson@compuserve.com">Thomas
		N. Anderson</A>
	<TR>	<TD>TI86 Assembler Include File
		<TD>The generic include file for TI86 programs.
		<TD><A HREF="ti86asm.inc"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="ti-cares@ti.com">Texas Instruments</A>
</TABLE>
<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>


<P><A NAME=docu>
<TABLE WIDTH=70% ALIGN=CENTER CLASS=info>
	<TR CLASS=header>
		<TD COLSPAN=6>Documents
	<TR CLASS=header>
		<TD WIDTH=10%>Name
		<TD>Description
		<TD WIDTH=10%>Download
		<TD WIDTH=10%>Author
	<TR>	<TD>Pointers
		<TD>List of custom menu pointer values.
		<TD>
		<A HREF="javascript:popup('pointers.txt')"><IMG SRC="../images/txt.gif"></A>
		<TD><A HREF="mailto:setton@alpes-net.fr">Benjamin
		Setton</A>
	<TR>	<TD>86 Custom Menu Pointers
		<TD>Information on the making your own customized
		menu pointers for the Custom Menu and how the TI86 works with menus.
		<TD><A HREF="javascript:popup('86custom.txt')"><IMG SRC="../images/txt.gif"></A>
		<TD><A HREF="mailto:xrigel@q-net.net">Andres Garcia</A>
</TABLE>
<P ALIGN=CENTER><A HREF=#TOP><IMG SRC="../images/top.gif"></A>

<P><A NAME=temp>
<TABLE WIDTH=70% ALIGN=CENTER CLASS=info>
	<TR CLASS=header>
		<TD COLSPAN=6>Templates
	<TR CLASS=header>
		<TD WIDTH=10%>Name
		<TD>Description
		<TD WIDTH=10%>Download
		<TD WIDTH=10%>Author
	<TR>	<TD>Multi Key Test
		<TD>An example of how to use Port 1 to check for
		multiple keys being held down at once.
		<TD><A HREF="JavaScript:popup('multikey.asm')"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
	<TR>	<TD>Temp Memory
		<TD>Save temporary variables in the free memory directly
		following your program.
		<TD><A HREF="javascript:popup('tempmemo.asm')"><IMG SRC="../images/source.gif"></A>
		<TD><A HREF="mailto:malcolmj1@juno.com">Jimi Malcolm</A>
</TABLE>
<P CLASS=clsFootnote>All file sizes are in bytes. Routine sizes are calculated by
counting actual code used, where as program sizes are calculated by what is
viewed on the Memory Delete Screen in TI-OS.
<SCRIPT LANGUAGE=JavaScript>bottom();</SCRIPT>